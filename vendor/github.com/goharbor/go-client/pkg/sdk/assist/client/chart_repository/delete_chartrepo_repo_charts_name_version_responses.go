// Code generated by go-swagger; DO NOT EDIT.

package chart_repository

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteChartrepoRepoChartsNameVersionReader is a Reader for the DeleteChartrepoRepoChartsNameVersion structure.
type DeleteChartrepoRepoChartsNameVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteChartrepoRepoChartsNameVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteChartrepoRepoChartsNameVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteChartrepoRepoChartsNameVersionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteChartrepoRepoChartsNameVersionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteChartrepoRepoChartsNameVersionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteChartrepoRepoChartsNameVersionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteChartrepoRepoChartsNameVersionOK creates a DeleteChartrepoRepoChartsNameVersionOK with default headers values
func NewDeleteChartrepoRepoChartsNameVersionOK() *DeleteChartrepoRepoChartsNameVersionOK {
	return &DeleteChartrepoRepoChartsNameVersionOK{}
}

/*
DeleteChartrepoRepoChartsNameVersionOK describes a response with status code 200, with default header values.

The specified chart entry is successfully deleted.
*/
type DeleteChartrepoRepoChartsNameVersionOK struct {
}

// IsSuccess returns true when this delete chartrepo repo charts name version o k response has a 2xx status code
func (o *DeleteChartrepoRepoChartsNameVersionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete chartrepo repo charts name version o k response has a 3xx status code
func (o *DeleteChartrepoRepoChartsNameVersionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete chartrepo repo charts name version o k response has a 4xx status code
func (o *DeleteChartrepoRepoChartsNameVersionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete chartrepo repo charts name version o k response has a 5xx status code
func (o *DeleteChartrepoRepoChartsNameVersionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete chartrepo repo charts name version o k response a status code equal to that given
func (o *DeleteChartrepoRepoChartsNameVersionOK) IsCode(code int) bool {
	return code == 200
}

func (o *DeleteChartrepoRepoChartsNameVersionOK) Error() string {
	return fmt.Sprintf("[DELETE /chartrepo/{repo}/charts/{name}/{version}][%d] deleteChartrepoRepoChartsNameVersionOK ", 200)
}

func (o *DeleteChartrepoRepoChartsNameVersionOK) String() string {
	return fmt.Sprintf("[DELETE /chartrepo/{repo}/charts/{name}/{version}][%d] deleteChartrepoRepoChartsNameVersionOK ", 200)
}

func (o *DeleteChartrepoRepoChartsNameVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteChartrepoRepoChartsNameVersionUnauthorized creates a DeleteChartrepoRepoChartsNameVersionUnauthorized with default headers values
func NewDeleteChartrepoRepoChartsNameVersionUnauthorized() *DeleteChartrepoRepoChartsNameVersionUnauthorized {
	return &DeleteChartrepoRepoChartsNameVersionUnauthorized{}
}

/*
DeleteChartrepoRepoChartsNameVersionUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteChartrepoRepoChartsNameVersionUnauthorized struct {
}

// IsSuccess returns true when this delete chartrepo repo charts name version unauthorized response has a 2xx status code
func (o *DeleteChartrepoRepoChartsNameVersionUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete chartrepo repo charts name version unauthorized response has a 3xx status code
func (o *DeleteChartrepoRepoChartsNameVersionUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete chartrepo repo charts name version unauthorized response has a 4xx status code
func (o *DeleteChartrepoRepoChartsNameVersionUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete chartrepo repo charts name version unauthorized response has a 5xx status code
func (o *DeleteChartrepoRepoChartsNameVersionUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete chartrepo repo charts name version unauthorized response a status code equal to that given
func (o *DeleteChartrepoRepoChartsNameVersionUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteChartrepoRepoChartsNameVersionUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /chartrepo/{repo}/charts/{name}/{version}][%d] deleteChartrepoRepoChartsNameVersionUnauthorized ", 401)
}

func (o *DeleteChartrepoRepoChartsNameVersionUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /chartrepo/{repo}/charts/{name}/{version}][%d] deleteChartrepoRepoChartsNameVersionUnauthorized ", 401)
}

func (o *DeleteChartrepoRepoChartsNameVersionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteChartrepoRepoChartsNameVersionForbidden creates a DeleteChartrepoRepoChartsNameVersionForbidden with default headers values
func NewDeleteChartrepoRepoChartsNameVersionForbidden() *DeleteChartrepoRepoChartsNameVersionForbidden {
	return &DeleteChartrepoRepoChartsNameVersionForbidden{}
}

/*
DeleteChartrepoRepoChartsNameVersionForbidden describes a response with status code 403, with default header values.

Operation is forbidden or quota exceeded
*/
type DeleteChartrepoRepoChartsNameVersionForbidden struct {
}

// IsSuccess returns true when this delete chartrepo repo charts name version forbidden response has a 2xx status code
func (o *DeleteChartrepoRepoChartsNameVersionForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete chartrepo repo charts name version forbidden response has a 3xx status code
func (o *DeleteChartrepoRepoChartsNameVersionForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete chartrepo repo charts name version forbidden response has a 4xx status code
func (o *DeleteChartrepoRepoChartsNameVersionForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete chartrepo repo charts name version forbidden response has a 5xx status code
func (o *DeleteChartrepoRepoChartsNameVersionForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete chartrepo repo charts name version forbidden response a status code equal to that given
func (o *DeleteChartrepoRepoChartsNameVersionForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteChartrepoRepoChartsNameVersionForbidden) Error() string {
	return fmt.Sprintf("[DELETE /chartrepo/{repo}/charts/{name}/{version}][%d] deleteChartrepoRepoChartsNameVersionForbidden ", 403)
}

func (o *DeleteChartrepoRepoChartsNameVersionForbidden) String() string {
	return fmt.Sprintf("[DELETE /chartrepo/{repo}/charts/{name}/{version}][%d] deleteChartrepoRepoChartsNameVersionForbidden ", 403)
}

func (o *DeleteChartrepoRepoChartsNameVersionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteChartrepoRepoChartsNameVersionNotFound creates a DeleteChartrepoRepoChartsNameVersionNotFound with default headers values
func NewDeleteChartrepoRepoChartsNameVersionNotFound() *DeleteChartrepoRepoChartsNameVersionNotFound {
	return &DeleteChartrepoRepoChartsNameVersionNotFound{}
}

/*
DeleteChartrepoRepoChartsNameVersionNotFound describes a response with status code 404, with default header values.

Not found
*/
type DeleteChartrepoRepoChartsNameVersionNotFound struct {
}

// IsSuccess returns true when this delete chartrepo repo charts name version not found response has a 2xx status code
func (o *DeleteChartrepoRepoChartsNameVersionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete chartrepo repo charts name version not found response has a 3xx status code
func (o *DeleteChartrepoRepoChartsNameVersionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete chartrepo repo charts name version not found response has a 4xx status code
func (o *DeleteChartrepoRepoChartsNameVersionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete chartrepo repo charts name version not found response has a 5xx status code
func (o *DeleteChartrepoRepoChartsNameVersionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete chartrepo repo charts name version not found response a status code equal to that given
func (o *DeleteChartrepoRepoChartsNameVersionNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteChartrepoRepoChartsNameVersionNotFound) Error() string {
	return fmt.Sprintf("[DELETE /chartrepo/{repo}/charts/{name}/{version}][%d] deleteChartrepoRepoChartsNameVersionNotFound ", 404)
}

func (o *DeleteChartrepoRepoChartsNameVersionNotFound) String() string {
	return fmt.Sprintf("[DELETE /chartrepo/{repo}/charts/{name}/{version}][%d] deleteChartrepoRepoChartsNameVersionNotFound ", 404)
}

func (o *DeleteChartrepoRepoChartsNameVersionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteChartrepoRepoChartsNameVersionInternalServerError creates a DeleteChartrepoRepoChartsNameVersionInternalServerError with default headers values
func NewDeleteChartrepoRepoChartsNameVersionInternalServerError() *DeleteChartrepoRepoChartsNameVersionInternalServerError {
	return &DeleteChartrepoRepoChartsNameVersionInternalServerError{}
}

/*
DeleteChartrepoRepoChartsNameVersionInternalServerError describes a response with status code 500, with default header values.

Internal server error occurred
*/
type DeleteChartrepoRepoChartsNameVersionInternalServerError struct {
}

// IsSuccess returns true when this delete chartrepo repo charts name version internal server error response has a 2xx status code
func (o *DeleteChartrepoRepoChartsNameVersionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete chartrepo repo charts name version internal server error response has a 3xx status code
func (o *DeleteChartrepoRepoChartsNameVersionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete chartrepo repo charts name version internal server error response has a 4xx status code
func (o *DeleteChartrepoRepoChartsNameVersionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete chartrepo repo charts name version internal server error response has a 5xx status code
func (o *DeleteChartrepoRepoChartsNameVersionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete chartrepo repo charts name version internal server error response a status code equal to that given
func (o *DeleteChartrepoRepoChartsNameVersionInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteChartrepoRepoChartsNameVersionInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /chartrepo/{repo}/charts/{name}/{version}][%d] deleteChartrepoRepoChartsNameVersionInternalServerError ", 500)
}

func (o *DeleteChartrepoRepoChartsNameVersionInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /chartrepo/{repo}/charts/{name}/{version}][%d] deleteChartrepoRepoChartsNameVersionInternalServerError ", 500)
}

func (o *DeleteChartrepoRepoChartsNameVersionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
