// Code generated by go-swagger; DO NOT EDIT.

package chart_repository

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/goharbor/go-client/pkg/sdk/assist/models"
)

// GetChartrepoRepoChartsNameReader is a Reader for the GetChartrepoRepoChartsName structure.
type GetChartrepoRepoChartsNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetChartrepoRepoChartsNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetChartrepoRepoChartsNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetChartrepoRepoChartsNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetChartrepoRepoChartsNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetChartrepoRepoChartsNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetChartrepoRepoChartsNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetChartrepoRepoChartsNameOK creates a GetChartrepoRepoChartsNameOK with default headers values
func NewGetChartrepoRepoChartsNameOK() *GetChartrepoRepoChartsNameOK {
	return &GetChartrepoRepoChartsNameOK{}
}

/*
GetChartrepoRepoChartsNameOK describes a response with status code 200, with default header values.

Retrieved all versions of the specified chart
*/
type GetChartrepoRepoChartsNameOK struct {
	Payload models.ChartVersions
}

// IsSuccess returns true when this get chartrepo repo charts name o k response has a 2xx status code
func (o *GetChartrepoRepoChartsNameOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get chartrepo repo charts name o k response has a 3xx status code
func (o *GetChartrepoRepoChartsNameOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chartrepo repo charts name o k response has a 4xx status code
func (o *GetChartrepoRepoChartsNameOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get chartrepo repo charts name o k response has a 5xx status code
func (o *GetChartrepoRepoChartsNameOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get chartrepo repo charts name o k response a status code equal to that given
func (o *GetChartrepoRepoChartsNameOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetChartrepoRepoChartsNameOK) Error() string {
	return fmt.Sprintf("[GET /chartrepo/{repo}/charts/{name}][%d] getChartrepoRepoChartsNameOK  %+v", 200, o.Payload)
}

func (o *GetChartrepoRepoChartsNameOK) String() string {
	return fmt.Sprintf("[GET /chartrepo/{repo}/charts/{name}][%d] getChartrepoRepoChartsNameOK  %+v", 200, o.Payload)
}

func (o *GetChartrepoRepoChartsNameOK) GetPayload() models.ChartVersions {
	return o.Payload
}

func (o *GetChartrepoRepoChartsNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChartrepoRepoChartsNameUnauthorized creates a GetChartrepoRepoChartsNameUnauthorized with default headers values
func NewGetChartrepoRepoChartsNameUnauthorized() *GetChartrepoRepoChartsNameUnauthorized {
	return &GetChartrepoRepoChartsNameUnauthorized{}
}

/*
GetChartrepoRepoChartsNameUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetChartrepoRepoChartsNameUnauthorized struct {
}

// IsSuccess returns true when this get chartrepo repo charts name unauthorized response has a 2xx status code
func (o *GetChartrepoRepoChartsNameUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get chartrepo repo charts name unauthorized response has a 3xx status code
func (o *GetChartrepoRepoChartsNameUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chartrepo repo charts name unauthorized response has a 4xx status code
func (o *GetChartrepoRepoChartsNameUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get chartrepo repo charts name unauthorized response has a 5xx status code
func (o *GetChartrepoRepoChartsNameUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get chartrepo repo charts name unauthorized response a status code equal to that given
func (o *GetChartrepoRepoChartsNameUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetChartrepoRepoChartsNameUnauthorized) Error() string {
	return fmt.Sprintf("[GET /chartrepo/{repo}/charts/{name}][%d] getChartrepoRepoChartsNameUnauthorized ", 401)
}

func (o *GetChartrepoRepoChartsNameUnauthorized) String() string {
	return fmt.Sprintf("[GET /chartrepo/{repo}/charts/{name}][%d] getChartrepoRepoChartsNameUnauthorized ", 401)
}

func (o *GetChartrepoRepoChartsNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetChartrepoRepoChartsNameForbidden creates a GetChartrepoRepoChartsNameForbidden with default headers values
func NewGetChartrepoRepoChartsNameForbidden() *GetChartrepoRepoChartsNameForbidden {
	return &GetChartrepoRepoChartsNameForbidden{}
}

/*
GetChartrepoRepoChartsNameForbidden describes a response with status code 403, with default header values.

Operation is forbidden or quota exceeded
*/
type GetChartrepoRepoChartsNameForbidden struct {
}

// IsSuccess returns true when this get chartrepo repo charts name forbidden response has a 2xx status code
func (o *GetChartrepoRepoChartsNameForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get chartrepo repo charts name forbidden response has a 3xx status code
func (o *GetChartrepoRepoChartsNameForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chartrepo repo charts name forbidden response has a 4xx status code
func (o *GetChartrepoRepoChartsNameForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get chartrepo repo charts name forbidden response has a 5xx status code
func (o *GetChartrepoRepoChartsNameForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get chartrepo repo charts name forbidden response a status code equal to that given
func (o *GetChartrepoRepoChartsNameForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetChartrepoRepoChartsNameForbidden) Error() string {
	return fmt.Sprintf("[GET /chartrepo/{repo}/charts/{name}][%d] getChartrepoRepoChartsNameForbidden ", 403)
}

func (o *GetChartrepoRepoChartsNameForbidden) String() string {
	return fmt.Sprintf("[GET /chartrepo/{repo}/charts/{name}][%d] getChartrepoRepoChartsNameForbidden ", 403)
}

func (o *GetChartrepoRepoChartsNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetChartrepoRepoChartsNameNotFound creates a GetChartrepoRepoChartsNameNotFound with default headers values
func NewGetChartrepoRepoChartsNameNotFound() *GetChartrepoRepoChartsNameNotFound {
	return &GetChartrepoRepoChartsNameNotFound{}
}

/*
GetChartrepoRepoChartsNameNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetChartrepoRepoChartsNameNotFound struct {
}

// IsSuccess returns true when this get chartrepo repo charts name not found response has a 2xx status code
func (o *GetChartrepoRepoChartsNameNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get chartrepo repo charts name not found response has a 3xx status code
func (o *GetChartrepoRepoChartsNameNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chartrepo repo charts name not found response has a 4xx status code
func (o *GetChartrepoRepoChartsNameNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get chartrepo repo charts name not found response has a 5xx status code
func (o *GetChartrepoRepoChartsNameNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get chartrepo repo charts name not found response a status code equal to that given
func (o *GetChartrepoRepoChartsNameNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetChartrepoRepoChartsNameNotFound) Error() string {
	return fmt.Sprintf("[GET /chartrepo/{repo}/charts/{name}][%d] getChartrepoRepoChartsNameNotFound ", 404)
}

func (o *GetChartrepoRepoChartsNameNotFound) String() string {
	return fmt.Sprintf("[GET /chartrepo/{repo}/charts/{name}][%d] getChartrepoRepoChartsNameNotFound ", 404)
}

func (o *GetChartrepoRepoChartsNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetChartrepoRepoChartsNameInternalServerError creates a GetChartrepoRepoChartsNameInternalServerError with default headers values
func NewGetChartrepoRepoChartsNameInternalServerError() *GetChartrepoRepoChartsNameInternalServerError {
	return &GetChartrepoRepoChartsNameInternalServerError{}
}

/*
GetChartrepoRepoChartsNameInternalServerError describes a response with status code 500, with default header values.

Internal server error occurred
*/
type GetChartrepoRepoChartsNameInternalServerError struct {
}

// IsSuccess returns true when this get chartrepo repo charts name internal server error response has a 2xx status code
func (o *GetChartrepoRepoChartsNameInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get chartrepo repo charts name internal server error response has a 3xx status code
func (o *GetChartrepoRepoChartsNameInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chartrepo repo charts name internal server error response has a 4xx status code
func (o *GetChartrepoRepoChartsNameInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get chartrepo repo charts name internal server error response has a 5xx status code
func (o *GetChartrepoRepoChartsNameInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get chartrepo repo charts name internal server error response a status code equal to that given
func (o *GetChartrepoRepoChartsNameInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetChartrepoRepoChartsNameInternalServerError) Error() string {
	return fmt.Sprintf("[GET /chartrepo/{repo}/charts/{name}][%d] getChartrepoRepoChartsNameInternalServerError ", 500)
}

func (o *GetChartrepoRepoChartsNameInternalServerError) String() string {
	return fmt.Sprintf("[GET /chartrepo/{repo}/charts/{name}][%d] getChartrepoRepoChartsNameInternalServerError ", 500)
}

func (o *GetChartrepoRepoChartsNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
